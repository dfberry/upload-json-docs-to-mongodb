fragment LabelBase on Label {
  id
  name
}

fragment RepositoryConnectionBase on Repository {
  name
}

fragment FollowerBase on User {
  name
}

fragment OrganizationBase on Organization {
  name
}

fragment UserBase on User {
  id
  login
  name
  url
  websiteUrl
  email
  createdAt
  updatedAt
  company
  updatedAt
}

fragment UserAll on User {
  ...UserBase
  watching(first: 10) {
    edges {
      node {
        ...RepositoryConnectionBase
      }
    }
  }
  followers(first: 10) {
    edges {
      node {
        ...FollowerBase
      }
    }
  }
  organizations(first: 10) {
    edges {
      node {
        ...OrganizationBase
      }
    }
  }
}

fragment IssueBase on Issue {
  id
  title
  url
  number
  state
  createdAt
  closedAt
}

fragment LastIssueInRepoAll on Issue {
  ...IssueBase
  participants(first: 10) {
    edges {
      node {
        ...UserAll
      }
    }
  }
  labels(first: 5) {
    edges {
      node {
        ...LabelBase
      }
    }
  }
}

query GetLastIssueInRepo(
  $owner: String!
  $repo: String!
  $pageSize: Int
  $after: String
) {
  repository(owner: $owner, name: $repo) {
    issues(
      last: $pageSize
      after: $after
      orderBy: { field: CREATED_AT, direction: DESC }
    ) {
      edges {
        node {
          ...LastIssueInRepoAll
        }
      }
    }
  }
}
